<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_meteor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += image_rotation;
direction = point_direction(x, y, obj_spaceship.x, obj_spaceship. y);
motion_set(direction, trackingSpeed);
obj_control.resolving = 15;

if type = c_pirate_missile {image_angle = direction;}

//Pirate ship script
if type == c_pirates {
    //shoot at player
    if random(100) &lt; 10 {
        getDirection = point_direction(x, y, obj_spaceship.x, obj_spaceship.y);
        missile = instance_create(x + lengthdir_x(10, getDirection), y+ lengthdir_y(10, getDirection) , obj_player_missile);
        missile.direction = getDirection + random(15) - 7.5;
        missile.image_angle = missile.direction;
        missile.speed = 15;
        missile.team = 1;
    }
    if distance_to_point(obj_spaceship.x, obj_spaceship.y) &lt; 500 &amp;&amp; time &gt; 60 {
        trackingSpeed *= .85
        time--;
    }
    if time &lt;= 60 time--;
    if time = 80 {
        //DEAL DAMAGE
        {
            flungHazard = instance_create(x, y, obj_rock_targetted)
            flungHazard.type = c_pirate_missile;
            flungHazard.damage = damage;
            flungHazard.trackingSpeed = 15;
            flungHazard.sprite_index = spr_fire;
            flungHazard.image_rotation = 0;
        }
    }
    
    if time &lt; 30 {
        trackingSpeed = -8;
        if obj_spaceship.weapons + obj_spaceship.weaponsBoost &gt; 4 {
            instance_destroy();
            explosion = instance_create(x, y, obj_explosion);
            explosion.image_xscale = 2;
            explosion.image_yscale = 2;
            obj_spaceship.honor += 3;
        }
        if x &gt; room_width+65 {instance_destroy()}
    }
}

//Alien ship script
if type == c_aliens {
    //shoot at player
    if distance_to_point(obj_spaceship.x, obj_spaceship.y) &lt; 500 &amp;&amp; time &gt; 60 {
        trackingSpeed *= .85
        time--;
    }
    if time &lt;= 60 time--;
    if time = 80 {
        //EJECT INVADER
        {
            flungHazard = instance_create(x, y, obj_astronaut)
            flungHazard.type = 0;
            obj_spaceship.alieninvader++;
            flungHazard.image_index = 0;
            flungHazard.image_speed = 0;
        }
    }
    
    if time &lt; 30 {
        trackingSpeed = -8;
        if obj_spaceship.weapons + obj_spaceship.weaponsBoost &gt; 6 {
            instance_destroy();
            explosion = instance_create(x, y, obj_explosion);
            explosion.image_xscale = 2;
            explosion.image_yscale = 2;
            obj_spaceship.honor += 5;
        }
        if x &gt; room_width+65 {instance_destroy()}
    }
}

//Space station script
if type == c_station { 
    x -= 6;
    sprite_index = spr_station;
    obj_spaceship.preferredY = 360;
    if x &lt; 1000 &amp;&amp; energy &gt; 0 {
        energy--;
        energyBullet = instance_create(x, y, obj_energy_boost);
        energyBullet.direction = random(360);
        energyBullet.speed = 5;
        energyBullet.image_speed = 0;
        energyBullet.image_index = 0;
        energyBullet.image_xscale = .25;
        energyBullet.image_yscale = .25;
    }
    if x &lt; -120 {
        obj_spaceship.preferredY = 240;
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
